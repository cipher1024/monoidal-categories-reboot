-- Copyright (c) 2018 Michael Jendrusch. All rights reserved.

import category_theory.category
import category_theory.functor
import category_theory.products
import category_theory.natural_isomorphism
open category_theory

universes u v


open category_theory.category
open category_theory.functor
open category_theory.prod
open category_theory.functor.category.nat_trans

namespace category_theory.monoidal

@[reducible] def tensor_obj_type
  (C : Type u) [category.{u v} C] :=
C ‚Üí C ‚Üí C

@[reducible] def tensor_hom_type
  {C : Type u} [category.{u v} C] (tensor_obj : tensor_obj_type C) : Type (max u v) :=
Œ† {X‚ÇÅ Y‚ÇÅ X‚ÇÇ Y‚ÇÇ : C}, hom X‚ÇÅ Y‚ÇÅ ‚Üí hom X‚ÇÇ Y‚ÇÇ ‚Üí hom (tensor_obj X‚ÇÅ X‚ÇÇ) (tensor_obj Y‚ÇÅ Y‚ÇÇ)

local attribute [tidy] tactic.assumption

def assoc_obj
  {C : Type u} [category.{u v} C] (tensor_obj : tensor_obj_type C) : Type (max u v) :=
Œ† X Y Z : C, (tensor_obj (tensor_obj X Y) Z) ‚âÖ (tensor_obj X (tensor_obj Y Z))

def assoc_natural
  {C : Type u} [category.{u v} C]
  (tensor_obj : tensor_obj_type C)
  (tensor_hom : tensor_hom_type tensor_obj)
  (assoc : assoc_obj tensor_obj) : Prop :=
‚àÄ {X‚ÇÅ X‚ÇÇ X‚ÇÉ Y‚ÇÅ Y‚ÇÇ Y‚ÇÉ : C} (f‚ÇÅ : X‚ÇÅ ‚ü∂ Y‚ÇÅ) (f‚ÇÇ : X‚ÇÇ ‚ü∂ Y‚ÇÇ) (f‚ÇÉ : X‚ÇÉ ‚ü∂ Y‚ÇÉ),
  (tensor_hom (tensor_hom f‚ÇÅ f‚ÇÇ) f‚ÇÉ) ‚â´ (assoc Y‚ÇÅ Y‚ÇÇ Y‚ÇÉ).hom = (assoc X‚ÇÅ X‚ÇÇ X‚ÇÉ).hom ‚â´ (tensor_hom f‚ÇÅ (tensor_hom f‚ÇÇ f‚ÇÉ))

def left_unitor_obj
  {C : Type u} [category.{u v} C]
  (tensor_obj : tensor_obj_type C)
  (tensor_unit : C) : Type (max u v) :=
Œ† X : C, (tensor_obj tensor_unit X) ‚âÖ X

def left_unitor_natural
  {C : Type u} [category.{u v} C]
  (tensor_obj : tensor_obj_type C)
  (tensor_hom : tensor_hom_type tensor_obj)
  (tensor_unit : C)
  (left_unitor : left_unitor_obj tensor_obj tensor_unit) : Prop :=
‚àÄ {X Y : C} (f : X ‚ü∂ Y),
  (tensor_hom (ùüô tensor_unit) f) ‚â´ (left_unitor Y).hom = (left_unitor X).hom ‚â´ f

def right_unitor_obj
  {C : Type u} [category.{u v} C]
  (tensor_obj : tensor_obj_type C)
  (tensor_unit : C) : Type (max u v) :=
Œ† (X : C), (tensor_obj X tensor_unit) ‚âÖ X

def right_unitor_natural
  {C : Type u} [category.{u v} C]
  (tensor_obj : tensor_obj_type C)
  (tensor_hom : tensor_hom_type tensor_obj)
  (tensor_unit : C)
  (right_unitor : right_unitor_obj tensor_obj tensor_unit) : Prop :=
‚àÄ {X Y : C} (f : X ‚ü∂ Y),
  (tensor_hom f (ùüô tensor_unit)) ‚â´ (right_unitor Y).hom = (right_unitor X).hom ‚â´ f

@[reducible] def pentagon
  {C : Type u} [category.{u v} C]
  {tensor_obj : tensor_obj_type C}
  (tensor_hom : tensor_hom_type tensor_obj)
  (assoc : assoc_obj tensor_obj) : Prop :=
‚àÄ W X Y Z : C,
  (tensor_hom (assoc W X Y).hom (ùüô Z)) ‚â´ (assoc W (tensor_obj X Y) Z).hom ‚â´ (tensor_hom (ùüô W) (assoc X Y Z).hom)
  = (assoc (tensor_obj W X) Y Z).hom ‚â´ (assoc W X (tensor_obj Y Z)).hom

@[reducible] def triangle
  {C : Type u} [category.{u v} C]
  {tensor_obj : tensor_obj_type C} {tensor_unit : C}
  (tensor_hom : tensor_hom_type tensor_obj)
  (left_unitor : left_unitor_obj tensor_obj tensor_unit)
  (right_unitor : right_unitor_obj tensor_obj tensor_unit)
  (assoc : assoc_obj tensor_obj) : Prop :=
‚àÄ X Y : C,
  (assoc X tensor_unit Y).hom ‚â´ (tensor_hom (ùüô X) (left_unitor Y).hom)
  = tensor_hom (right_unitor X).hom (ùüô Y)

end category_theory.monoidal
